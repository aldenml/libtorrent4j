1.2.1.0

  * using android NDK r19c
  * updated to boost 1.70.0
  * removed support for FreeBSD
  * lt:make sure session cleanup releases all its references to torrents
  * lt:track the mapped port for each NAT mapping transport
  * lt:optimize resolve_duplicate_filenames_slow()
  * lt:use a more restrictive limit on number of pieces allowed in a torrent
  * lt:improve disk I/O logging
  * lt:always flush disk I/O job queue before shutdown
  * lt:fix typo in validation of reject messages. Make on_choke a bit more
    defensive
  * lt:tighten up validation of dont-have messages
  * lt:tighten up validation of reject messages, to ensure consistency of stats
    counters
  * lt:tighten up message size checks
  * lt:update symlinks to conform to BEP 47
  * lt:source code cleanup, performance and stability

1.2.0.22

  * updated to OpenSSL 1.1.1b
  * using android NDK r19b
  * lt:add support for creating symlinks, for torrents with symlinks in them
  * lt:allow padfiles of equal size to share the same filename
  * lt:fix seed_mode flag
  * lt:support numeric suffixes to magnet link parameter names
  * lt:added FrostWire's client ID
  * lt:don't try to hash empty read in do_uncached_hash
  * lt:don't copy a vector into the async_write operation for iovec
  * lt:on linux, link against lbdl when using openssl
  * lt:use UNC paths pervasively on windows
  * lt:source code cleanup, performance and stability

1.2.0.21

  * updated to boost 1.69.0
  * experimental support for android posix hook
  * libtorrent release 1.2.0
  * lt:only allow cwnd to be reduced so often (utp)
  * lt:avoid announcing local ip to private tracker
  * lt:don't treat loss of MTU probe packet as a congestion signal (utp)
  * lt:make sure we reset the duplicate ack counter every time we don't receive
    a duplicate ack (utp)
  * lt:remove old (incompatible) sequence number build option (utp)
  * lt:don't leave slow-start just because we hit the advertized receive window
  * lt:simplify and improve the uTP deferred ACK logic to respond earlier
  * lt:improve logic for fast-retransmitting packets on incoming SACK
  * lt:improve utp verbose logging a bit and make the parser pull out more
    metrics
  * lt:restore permissions on directories to 1.1. i.e. rely on umask
  * lt:minor fix to invalid_request_alert logging
  * lt:source code cleanup, performance and stability

1.2.0.20

  * updated to OpenSSL 1.1.1a
  * using android NDK r18b
  * removed posix wrapper hack
  * added support for BEP 53
  * fixed priority values
  * lt:add assignment operator to span
  * lt:fix %u -> %d format codes
  * lt:fix deprecation markup in torrent_status
  * lt:tweak heuristic of how to interpret url seeds in multi-file torrents
  * lt:added more TORRENT_DEPRECATED_ENUM and deprecated unused aio_max in
    settings_pack
  * lt:take a string_view in setting_by_name
  * lt:fix typo in peer log
  * lt:deprecate start_default_features flag, it's only used in deprecated API
  * lt:remove verbose peer logging
  * lt:make stack_allocator::format_string() grow the buffer for large strings
  * lt:move where socket buffers are set up, to happen after the socket is
    opened. log errors in the peer's log instead of session and torrent
  * lt:add stats counter for the number of outstanding async_accept calls
  * lt:fix potential issue where the dht port message is sent before the peer
    handshake
  * lt:correct %u format code for pieces in printf() calls
  * lt:attempt to fix an assert for a newly connected peer that disconnects just
    as we receive the metadata
  * lt:don't use page aligned disk buffers
  * lt:include &ipv4= for private trackers
  * lt:add support for &ipv4= tracker argument
  * lt:use new bdecoder in ut_metadata class
  * lt:fix redundant bytes overflow
  * lt:check for self-assignment in bitfield operator=
  * lt:initialize bencoded ints with zero when constructed
  * lt:exit natpmp::on_reply earlier if we're shutting down
  * lt:fix setting ipv6 interface
  * lt:a better fix to the ssl port announce bug
  * lt:perfect forward async handlers for udp_socket to underlying asio socket
  * lt:move the whole add_torrent_params object into save_resume_data_alert
  * lt:actually fix the issue with the second tracker announce with port 0
  * lt:remove redundant MTU boundary checks
  * lt:fix of asio-debugging build in natpmp. resend_request could be called
    directly, not only as a handler for an async operation
  * lt:fix move_storage with save_path with a trailing slash
  * lt:only make snubbed peers invert the piece picking strategy when we're
    doing rarest first
  * lt:source code cleanup, performance and stability

1.2.0.19

  * lt:ssl listen port fix and improved tracker announce logging
  * lt:properly tear down the disk_io_thread object in set_piece_hashes() when
    exiting via an exception
  * lt:make throwing versions of read_resume_data
  * lt:fix overflow in sliding_average in the case of very high download rates
  * lt:renamed debug_notification to connect_notification
  * lt:fix issue in udp_socket with unusual socket failure
  * lt:utp close-reason use after free fix
  * lt:source code cleanup, performance and stability
  * starting from jlibtorrent 1.2.0.18
