/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.libtorrent4j.swig2;

public class libtorrent_jni {


    static {
        try {
            String path = System.getProperty("libtorrent4j.jni.path", "");
            if ("".equals(path)) {
                String libname = "torrent4j";
                String os = System.getProperty("os.name");
                if (os != null && os.toLowerCase(java.util.Locale.US).contains("windows"))
                    libname = "lib" + libname;

                System.loadLibrary(libname);
            } else {
                System.load(path);
            }
        } catch (LinkageError e) {
            throw new LinkageError(
                "Look for your architecture binary instructions at: https://github.com/aldenml/libtorrent4j", e);
        }
    }

  public final static native long new_string_int_pair__SWIG_0();
  public final static native long new_string_int_pair__SWIG_1(String jarg1, int jarg2);
  public final static native long new_string_int_pair__SWIG_2(long jarg1, string_int_pair jarg1_);
  public final static native void string_int_pair_first_set(long jarg1, string_int_pair jarg1_, String jarg2);
  public final static native String string_int_pair_first_get(long jarg1, string_int_pair jarg1_);
  public final static native void string_int_pair_second_set(long jarg1, string_int_pair jarg1_, int jarg2);
  public final static native int string_int_pair_second_get(long jarg1, string_int_pair jarg1_);
  public final static native void delete_string_int_pair(long jarg1);
  public final static native long new_string_vector__SWIG_0();
  public final static native long new_string_vector__SWIG_1(long jarg1, string_vector jarg1_);
  public final static native long string_vector_capacity(long jarg1, string_vector jarg1_);
  public final static native void string_vector_reserve(long jarg1, string_vector jarg1_, long jarg2);
  public final static native boolean string_vector_isEmpty(long jarg1, string_vector jarg1_);
  public final static native void string_vector_clear(long jarg1, string_vector jarg1_);
  public final static native long new_string_vector__SWIG_2(int jarg1, String jarg2);
  public final static native int string_vector_doSize(long jarg1, string_vector jarg1_);
  public final static native void string_vector_doAdd__SWIG_0(long jarg1, string_vector jarg1_, String jarg2);
  public final static native void string_vector_doAdd__SWIG_1(long jarg1, string_vector jarg1_, int jarg2, String jarg3);
  public final static native String string_vector_doRemove(long jarg1, string_vector jarg1_, int jarg2);
  public final static native String string_vector_doGet(long jarg1, string_vector jarg1_, int jarg2);
  public final static native String string_vector_doSet(long jarg1, string_vector jarg1_, int jarg2, String jarg3);
  public final static native void string_vector_doRemoveRange(long jarg1, string_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_string_vector(long jarg1);
  public final static native long new_int_vector__SWIG_0();
  public final static native long new_int_vector__SWIG_1(long jarg1, int_vector jarg1_);
  public final static native long int_vector_capacity(long jarg1, int_vector jarg1_);
  public final static native void int_vector_reserve(long jarg1, int_vector jarg1_, long jarg2);
  public final static native boolean int_vector_isEmpty(long jarg1, int_vector jarg1_);
  public final static native void int_vector_clear(long jarg1, int_vector jarg1_);
  public final static native long new_int_vector__SWIG_2(int jarg1, int jarg2);
  public final static native int int_vector_doSize(long jarg1, int_vector jarg1_);
  public final static native void int_vector_doAdd__SWIG_0(long jarg1, int_vector jarg1_, int jarg2);
  public final static native void int_vector_doAdd__SWIG_1(long jarg1, int_vector jarg1_, int jarg2, int jarg3);
  public final static native int int_vector_doRemove(long jarg1, int_vector jarg1_, int jarg2);
  public final static native int int_vector_doGet(long jarg1, int_vector jarg1_, int jarg2);
  public final static native int int_vector_doSet(long jarg1, int_vector jarg1_, int jarg2, int jarg3);
  public final static native void int_vector_doRemoveRange(long jarg1, int_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_int_vector(long jarg1);
  public final static native long new_byte_vector__SWIG_0();
  public final static native long new_byte_vector__SWIG_1(long jarg1, byte_vector jarg1_);
  public final static native long byte_vector_capacity(long jarg1, byte_vector jarg1_);
  public final static native void byte_vector_reserve(long jarg1, byte_vector jarg1_, long jarg2);
  public final static native boolean byte_vector_isEmpty(long jarg1, byte_vector jarg1_);
  public final static native void byte_vector_clear(long jarg1, byte_vector jarg1_);
  public final static native long new_byte_vector__SWIG_2(int jarg1, byte jarg2);
  public final static native int byte_vector_doSize(long jarg1, byte_vector jarg1_);
  public final static native void byte_vector_doAdd__SWIG_0(long jarg1, byte_vector jarg1_, byte jarg2);
  public final static native void byte_vector_doAdd__SWIG_1(long jarg1, byte_vector jarg1_, int jarg2, byte jarg3);
  public final static native byte byte_vector_doRemove(long jarg1, byte_vector jarg1_, int jarg2);
  public final static native byte byte_vector_doGet(long jarg1, byte_vector jarg1_, int jarg2);
  public final static native byte byte_vector_doSet(long jarg1, byte_vector jarg1_, int jarg2, byte jarg3);
  public final static native void byte_vector_doRemoveRange(long jarg1, byte_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_byte_vector(long jarg1);
  public final static native long new_bool_vector__SWIG_0();
  public final static native long new_bool_vector__SWIG_1(long jarg1, bool_vector jarg1_);
  public final static native long bool_vector_capacity(long jarg1, bool_vector jarg1_);
  public final static native void bool_vector_reserve(long jarg1, bool_vector jarg1_, long jarg2);
  public final static native boolean bool_vector_isEmpty(long jarg1, bool_vector jarg1_);
  public final static native void bool_vector_clear(long jarg1, bool_vector jarg1_);
  public final static native long new_bool_vector__SWIG_2(int jarg1, boolean jarg2);
  public final static native int bool_vector_doSize(long jarg1, bool_vector jarg1_);
  public final static native void bool_vector_doAdd__SWIG_0(long jarg1, bool_vector jarg1_, boolean jarg2);
  public final static native void bool_vector_doAdd__SWIG_1(long jarg1, bool_vector jarg1_, int jarg2, boolean jarg3);
  public final static native boolean bool_vector_doRemove(long jarg1, bool_vector jarg1_, int jarg2);
  public final static native boolean bool_vector_doGet(long jarg1, bool_vector jarg1_, int jarg2);
  public final static native boolean bool_vector_doSet(long jarg1, bool_vector jarg1_, int jarg2, boolean jarg3);
  public final static native void bool_vector_doRemoveRange(long jarg1, bool_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_bool_vector(long jarg1);
  public final static native long new_string_int_pair_vector__SWIG_0();
  public final static native long new_string_int_pair_vector__SWIG_1(long jarg1, string_int_pair_vector jarg1_);
  public final static native long string_int_pair_vector_capacity(long jarg1, string_int_pair_vector jarg1_);
  public final static native void string_int_pair_vector_reserve(long jarg1, string_int_pair_vector jarg1_, long jarg2);
  public final static native boolean string_int_pair_vector_isEmpty(long jarg1, string_int_pair_vector jarg1_);
  public final static native void string_int_pair_vector_clear(long jarg1, string_int_pair_vector jarg1_);
  public final static native long new_string_int_pair_vector__SWIG_2(int jarg1, long jarg2, string_int_pair jarg2_);
  public final static native int string_int_pair_vector_doSize(long jarg1, string_int_pair_vector jarg1_);
  public final static native void string_int_pair_vector_doAdd__SWIG_0(long jarg1, string_int_pair_vector jarg1_, long jarg2, string_int_pair jarg2_);
  public final static native void string_int_pair_vector_doAdd__SWIG_1(long jarg1, string_int_pair_vector jarg1_, int jarg2, long jarg3, string_int_pair jarg3_);
  public final static native long string_int_pair_vector_doRemove(long jarg1, string_int_pair_vector jarg1_, int jarg2);
  public final static native long string_int_pair_vector_doGet(long jarg1, string_int_pair_vector jarg1_, int jarg2);
  public final static native long string_int_pair_vector_doSet(long jarg1, string_int_pair_vector jarg1_, int jarg2, long jarg3, string_int_pair jarg3_);
  public final static native void string_int_pair_vector_doRemoveRange(long jarg1, string_int_pair_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_string_int_pair_vector(long jarg1);
  public final static native long new_tcp_endpoint_vector__SWIG_0();
  public final static native long new_tcp_endpoint_vector__SWIG_1(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native long tcp_endpoint_vector_capacity(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native void tcp_endpoint_vector_reserve(long jarg1, tcp_endpoint_vector jarg1_, long jarg2);
  public final static native boolean tcp_endpoint_vector_isEmpty(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native void tcp_endpoint_vector_clear(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native long new_tcp_endpoint_vector__SWIG_2(int jarg1, long jarg2, tcp_endpoint jarg2_);
  public final static native int tcp_endpoint_vector_doSize(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native void tcp_endpoint_vector_doAdd__SWIG_0(long jarg1, tcp_endpoint_vector jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native void tcp_endpoint_vector_doAdd__SWIG_1(long jarg1, tcp_endpoint_vector jarg1_, int jarg2, long jarg3, tcp_endpoint jarg3_);
  public final static native long tcp_endpoint_vector_doRemove(long jarg1, tcp_endpoint_vector jarg1_, int jarg2);
  public final static native long tcp_endpoint_vector_doGet(long jarg1, tcp_endpoint_vector jarg1_, int jarg2);
  public final static native long tcp_endpoint_vector_doSet(long jarg1, tcp_endpoint_vector jarg1_, int jarg2, long jarg3, tcp_endpoint jarg3_);
  public final static native void tcp_endpoint_vector_doRemoveRange(long jarg1, tcp_endpoint_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_tcp_endpoint_vector(long jarg1);
  public final static native long new_bool_vector_vector__SWIG_0();
  public final static native long new_bool_vector_vector__SWIG_1(long jarg1, bool_vector_vector jarg1_);
  public final static native long bool_vector_vector_capacity(long jarg1, bool_vector_vector jarg1_);
  public final static native void bool_vector_vector_reserve(long jarg1, bool_vector_vector jarg1_, long jarg2);
  public final static native boolean bool_vector_vector_isEmpty(long jarg1, bool_vector_vector jarg1_);
  public final static native void bool_vector_vector_clear(long jarg1, bool_vector_vector jarg1_);
  public final static native long new_bool_vector_vector__SWIG_2(int jarg1, long jarg2, bool_vector jarg2_);
  public final static native int bool_vector_vector_doSize(long jarg1, bool_vector_vector jarg1_);
  public final static native void bool_vector_vector_doAdd__SWIG_0(long jarg1, bool_vector_vector jarg1_, long jarg2, bool_vector jarg2_);
  public final static native void bool_vector_vector_doAdd__SWIG_1(long jarg1, bool_vector_vector jarg1_, int jarg2, long jarg3, bool_vector jarg3_);
  public final static native long bool_vector_vector_doRemove(long jarg1, bool_vector_vector jarg1_, int jarg2);
  public final static native long bool_vector_vector_doGet(long jarg1, bool_vector_vector jarg1_, int jarg2);
  public final static native long bool_vector_vector_doSet(long jarg1, bool_vector_vector jarg1_, int jarg2, long jarg3, bool_vector jarg3_);
  public final static native void bool_vector_vector_doRemoveRange(long jarg1, bool_vector_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_bool_vector_vector(long jarg1);
  public final static native long new_sha256_hash_vector_vector__SWIG_0();
  public final static native long new_sha256_hash_vector_vector__SWIG_1(long jarg1, sha256_hash_vector_vector jarg1_);
  public final static native long sha256_hash_vector_vector_capacity(long jarg1, sha256_hash_vector_vector jarg1_);
  public final static native void sha256_hash_vector_vector_reserve(long jarg1, sha256_hash_vector_vector jarg1_, long jarg2);
  public final static native boolean sha256_hash_vector_vector_isEmpty(long jarg1, sha256_hash_vector_vector jarg1_);
  public final static native void sha256_hash_vector_vector_clear(long jarg1, sha256_hash_vector_vector jarg1_);
  public final static native long new_sha256_hash_vector_vector__SWIG_2(int jarg1, long jarg2, sha256_hash_vector jarg2_);
  public final static native int sha256_hash_vector_vector_doSize(long jarg1, sha256_hash_vector_vector jarg1_);
  public final static native void sha256_hash_vector_vector_doAdd__SWIG_0(long jarg1, sha256_hash_vector_vector jarg1_, long jarg2, sha256_hash_vector jarg2_);
  public final static native void sha256_hash_vector_vector_doAdd__SWIG_1(long jarg1, sha256_hash_vector_vector jarg1_, int jarg2, long jarg3, sha256_hash_vector jarg3_);
  public final static native long sha256_hash_vector_vector_doRemove(long jarg1, sha256_hash_vector_vector jarg1_, int jarg2);
  public final static native long sha256_hash_vector_vector_doGet(long jarg1, sha256_hash_vector_vector jarg1_, int jarg2);
  public final static native long sha256_hash_vector_vector_doSet(long jarg1, sha256_hash_vector_vector jarg1_, int jarg2, long jarg3, sha256_hash_vector jarg3_);
  public final static native void sha256_hash_vector_vector_doRemoveRange(long jarg1, sha256_hash_vector_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_sha256_hash_vector_vector(long jarg1);
  public final static native long new_int_string_map__SWIG_0();
  public final static native long new_int_string_map__SWIG_1(long jarg1, int_string_map jarg1_);
  public final static native long int_string_map_Iterator_getNextUnchecked(long jarg1, int_string_map.Iterator jarg1_);
  public final static native boolean int_string_map_Iterator_isNot(long jarg1, int_string_map.Iterator jarg1_, long jarg2, int_string_map.Iterator jarg2_);
  public final static native int int_string_map_Iterator_getKey(long jarg1, int_string_map.Iterator jarg1_);
  public final static native String int_string_map_Iterator_getValue(long jarg1, int_string_map.Iterator jarg1_);
  public final static native void int_string_map_Iterator_setValue(long jarg1, int_string_map.Iterator jarg1_, String jarg2);
  public final static native void delete_int_string_map_Iterator(long jarg1);
  public final static native boolean int_string_map_isEmpty(long jarg1, int_string_map jarg1_);
  public final static native void int_string_map_clear(long jarg1, int_string_map jarg1_);
  public final static native long int_string_map_find(long jarg1, int_string_map jarg1_, int jarg2);
  public final static native long int_string_map_begin(long jarg1, int_string_map jarg1_);
  public final static native long int_string_map_end(long jarg1, int_string_map jarg1_);
  public final static native int int_string_map_sizeImpl(long jarg1, int_string_map jarg1_);
  public final static native boolean int_string_map_containsImpl(long jarg1, int_string_map jarg1_, int jarg2);
  public final static native void int_string_map_putUnchecked(long jarg1, int_string_map jarg1_, int jarg2, String jarg3);
  public final static native void int_string_map_removeUnchecked(long jarg1, int_string_map jarg1_, long jarg2, int_string_map.Iterator jarg2_);
  public final static native void delete_int_string_map(long jarg1);
  public final static native long new_int_bitfield_map__SWIG_0();
  public final static native long new_int_bitfield_map__SWIG_1(long jarg1, int_bitfield_map jarg1_);
  public final static native long int_bitfield_map_Iterator_getNextUnchecked(long jarg1, int_bitfield_map.Iterator jarg1_);
  public final static native boolean int_bitfield_map_Iterator_isNot(long jarg1, int_bitfield_map.Iterator jarg1_, long jarg2, int_bitfield_map.Iterator jarg2_);
  public final static native int int_bitfield_map_Iterator_getKey(long jarg1, int_bitfield_map.Iterator jarg1_);
  public final static native long int_bitfield_map_Iterator_getValue(long jarg1, int_bitfield_map.Iterator jarg1_);
  public final static native void int_bitfield_map_Iterator_setValue(long jarg1, int_bitfield_map.Iterator jarg1_, long jarg2, bitfield jarg2_);
  public final static native void delete_int_bitfield_map_Iterator(long jarg1);
  public final static native boolean int_bitfield_map_isEmpty(long jarg1, int_bitfield_map jarg1_);
  public final static native void int_bitfield_map_clear(long jarg1, int_bitfield_map jarg1_);
  public final static native long int_bitfield_map_find(long jarg1, int_bitfield_map jarg1_, int jarg2);
  public final static native long int_bitfield_map_begin(long jarg1, int_bitfield_map jarg1_);
  public final static native long int_bitfield_map_end(long jarg1, int_bitfield_map jarg1_);
  public final static native int int_bitfield_map_sizeImpl(long jarg1, int_bitfield_map jarg1_);
  public final static native boolean int_bitfield_map_containsImpl(long jarg1, int_bitfield_map jarg1_, int jarg2);
  public final static native void int_bitfield_map_putUnchecked(long jarg1, int_bitfield_map jarg1_, int jarg2, long jarg3, bitfield jarg3_);
  public final static native void int_bitfield_map_removeUnchecked(long jarg1, int_bitfield_map jarg1_, long jarg2, int_bitfield_map.Iterator jarg2_);
  public final static native void delete_int_bitfield_map(long jarg1);
  public final static native int success_get();
  public final static native int address_family_not_supported_get();
  public final static native int address_in_use_get();
  public final static native int address_not_available_get();
  public final static native int already_connected_get();
  public final static native int argument_list_too_long_get();
  public final static native int argument_out_of_domain_get();
  public final static native int bad_address_get();
  public final static native int bad_file_descriptor_get();
  public final static native int bad_message_get();
  public final static native int broken_pipe_get();
  public final static native int connection_aborted_get();
  public final static native int connection_already_in_progress_get();
  public final static native int connection_refused_get();
  public final static native int connection_reset_get();
  public final static native int cross_device_link_get();
  public final static native int destination_address_required_get();
  public final static native int device_or_resource_busy_get();
  public final static native int directory_not_empty_get();
  public final static native int executable_format_error_get();
  public final static native int file_exists_get();
  public final static native int file_too_large_get();
  public final static native int filename_too_long_get();
  public final static native int function_not_supported_get();
  public final static native int host_unreachable_get();
  public final static native int identifier_removed_get();
  public final static native int illegal_byte_sequence_get();
  public final static native int inappropriate_io_control_operation_get();
  public final static native int interrupted_get();
  public final static native int invalid_argument_get();
  public final static native int invalid_seek_get();
  public final static native int io_error_get();
  public final static native int is_a_directory_get();
  public final static native int message_size_get();
  public final static native int network_down_get();
  public final static native int network_reset_get();
  public final static native int network_unreachable_get();
  public final static native int no_buffer_space_get();
  public final static native int no_child_process_get();
  public final static native int no_link_get();
  public final static native int no_lock_available_get();
  public final static native int no_message_available_get();
  public final static native int no_message_get();
  public final static native int no_protocol_option_get();
  public final static native int no_space_on_device_get();
  public final static native int no_stream_resources_get();
  public final static native int no_such_device_or_address_get();
  public final static native int no_such_device_get();
  public final static native int no_such_file_or_directory_get();
  public final static native int no_such_process_get();
  public final static native int not_a_directory_get();
  public final static native int not_a_socket_get();
  public final static native int not_a_stream_get();
  public final static native int not_connected_get();
  public final static native int not_enough_memory_get();
  public final static native int not_supported_get();
  public final static native int operation_canceled_get();
  public final static native int operation_in_progress_get();
  public final static native int operation_not_permitted_get();
  public final static native int operation_not_supported_get();
  public final static native int operation_would_block_get();
  public final static native int owner_dead_get();
  public final static native int permission_denied_get();
  public final static native int protocol_error_get();
  public final static native int protocol_not_supported_get();
  public final static native int read_only_file_system_get();
  public final static native int resource_deadlock_would_occur_get();
  public final static native int resource_unavailable_try_again_get();
  public final static native int result_out_of_range_get();
  public final static native int state_not_recoverable_get();
  public final static native int stream_timeout_get();
  public final static native int text_file_busy_get();
  public final static native int timed_out_get();
  public final static native int too_many_files_open_in_system_get();
  public final static native int too_many_files_open_get();
  public final static native int too_many_links_get();
  public final static native int too_many_symbolic_link_levels_get();
  public final static native int value_too_large_get();
  public final static native int wrong_protocol_type_get();
  public final static native long new_error_code();
  public final static native void error_code_clear(long jarg1, error_code jarg1_);
  public final static native int error_code_value(long jarg1, error_code jarg1_);
  public final static native String error_code_message(long jarg1, error_code jarg1_);
  public final static native boolean error_code_failed(long jarg1, error_code jarg1_);
  public final static native boolean error_code_op_bool(long jarg1, error_code jarg1_);
  public final static native boolean op_eq__SWIG_1(long jarg1, error_code jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean op_lt__SWIG_1(long jarg1, error_code jarg1_, long jarg2, error_code jarg2_);
  public final static native void delete_error_code(long jarg1);
  public final static native long make_error_code(int jarg1);
  public final static native long new_client_data_t__SWIG_0();
  public final static native long new_client_data_t__SWIG_1(long jarg1);
  public final static native long client_data_t_get(long jarg1, client_data_t jarg1_);
  public final static native void delete_client_data_t(long jarg1);
  public final static native int sha1_hash_size();
  public final static native long new_sha1_hash__SWIG_0();
  public final static native long new_sha1_hash__SWIG_1(long jarg1, sha1_hash jarg1_);
  public final static native long sha1_hash_max();
  public final static native long sha1_hash_min();
  public final static native void sha1_hash_clear(long jarg1, sha1_hash jarg1_);
  public final static native boolean sha1_hash_is_all_zeros(long jarg1, sha1_hash jarg1_);
  public final static native long sha1_hash_op_shl_mut(long jarg1, sha1_hash jarg1_, int jarg2);
  public final static native long sha1_hash_op_shr_mut(long jarg1, sha1_hash jarg1_, int jarg2);
  public final static native boolean sha1_hash_op_eq(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native boolean sha1_hash_op_ne(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native boolean sha1_hash_op_lt(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native int sha1_hash_count_leading_zeroes(long jarg1, sha1_hash jarg1_);
  public final static native long sha1_hash_op_neg(long jarg1, sha1_hash jarg1_);
  public final static native long sha1_hash_op_xor(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long sha1_hash_op_xor_mut(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long sha1_hash_op_and(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long sha1_hash_op_and_mut(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long sha1_hash_op_or_mut(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long new_sha1_hash__SWIG_2(long jarg1, byte_vector jarg1_);
  public final static native void sha1_hash_assign(long jarg1, sha1_hash jarg1_, long jarg2, byte_vector jarg2_);
  public final static native int sha1_hash_hash_code(long jarg1, sha1_hash jarg1_);
  public final static native long sha1_hash_to_bytes(long jarg1, sha1_hash jarg1_);
  public final static native String sha1_hash_to_hex(long jarg1, sha1_hash jarg1_);
  public final static native long sha1_hash_from_hex(String jarg1);
  public final static native int sha1_hash_compare(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void delete_sha1_hash(long jarg1);
  public final static native int sha256_hash_size();
  public final static native long new_sha256_hash__SWIG_0();
  public final static native long new_sha256_hash__SWIG_1(long jarg1, sha256_hash jarg1_);
  public final static native long sha256_hash_max();
  public final static native long sha256_hash_min();
  public final static native void sha256_hash_clear(long jarg1, sha256_hash jarg1_);
  public final static native boolean sha256_hash_is_all_zeros(long jarg1, sha256_hash jarg1_);
  public final static native long sha256_hash_op_shl_mut(long jarg1, sha256_hash jarg1_, int jarg2);
  public final static native long sha256_hash_op_shr_mut(long jarg1, sha256_hash jarg1_, int jarg2);
  public final static native boolean sha256_hash_op_eq(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native boolean sha256_hash_op_ne(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native boolean sha256_hash_op_lt(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native int sha256_hash_count_leading_zeroes(long jarg1, sha256_hash jarg1_);
  public final static native long sha256_hash_op_neg(long jarg1, sha256_hash jarg1_);
  public final static native long sha256_hash_op_xor(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native long sha256_hash_op_xor_mut(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native long sha256_hash_op_and(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native long sha256_hash_op_and_mut(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native long sha256_hash_op_or_mut(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native long new_sha256_hash__SWIG_2(long jarg1, byte_vector jarg1_);
  public final static native void sha256_hash_assign(long jarg1, sha256_hash jarg1_, long jarg2, byte_vector jarg2_);
  public final static native int sha256_hash_hash_code(long jarg1, sha256_hash jarg1_);
  public final static native long sha256_hash_to_bytes(long jarg1, sha256_hash jarg1_);
  public final static native String sha256_hash_to_hex(long jarg1, sha256_hash jarg1_);
  public final static native long sha256_hash_from_hex(String jarg1);
  public final static native int sha256_hash_compare(long jarg1, sha256_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native void delete_sha256_hash(long jarg1);
  public final static native long new_sha1_hash_vector__SWIG_0();
  public final static native long new_sha1_hash_vector__SWIG_1(long jarg1, sha1_hash_vector jarg1_);
  public final static native long sha1_hash_vector_capacity(long jarg1, sha1_hash_vector jarg1_);
  public final static native void sha1_hash_vector_reserve(long jarg1, sha1_hash_vector jarg1_, long jarg2);
  public final static native boolean sha1_hash_vector_isEmpty(long jarg1, sha1_hash_vector jarg1_);
  public final static native void sha1_hash_vector_clear(long jarg1, sha1_hash_vector jarg1_);
  public final static native long new_sha1_hash_vector__SWIG_2(int jarg1, long jarg2, sha1_hash jarg2_);
  public final static native int sha1_hash_vector_doSize(long jarg1, sha1_hash_vector jarg1_);
  public final static native void sha1_hash_vector_doAdd__SWIG_0(long jarg1, sha1_hash_vector jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void sha1_hash_vector_doAdd__SWIG_1(long jarg1, sha1_hash_vector jarg1_, int jarg2, long jarg3, sha1_hash jarg3_);
  public final static native long sha1_hash_vector_doRemove(long jarg1, sha1_hash_vector jarg1_, int jarg2);
  public final static native long sha1_hash_vector_doGet(long jarg1, sha1_hash_vector jarg1_, int jarg2);
  public final static native long sha1_hash_vector_doSet(long jarg1, sha1_hash_vector jarg1_, int jarg2, long jarg3, sha1_hash jarg3_);
  public final static native void sha1_hash_vector_doRemoveRange(long jarg1, sha1_hash_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_sha1_hash_vector(long jarg1);
  public final static native long new_sha256_hash_vector__SWIG_0();
  public final static native long new_sha256_hash_vector__SWIG_1(long jarg1, sha256_hash_vector jarg1_);
  public final static native long sha256_hash_vector_capacity(long jarg1, sha256_hash_vector jarg1_);
  public final static native void sha256_hash_vector_reserve(long jarg1, sha256_hash_vector jarg1_, long jarg2);
  public final static native boolean sha256_hash_vector_isEmpty(long jarg1, sha256_hash_vector jarg1_);
  public final static native void sha256_hash_vector_clear(long jarg1, sha256_hash_vector jarg1_);
  public final static native long new_sha256_hash_vector__SWIG_2(int jarg1, long jarg2, sha256_hash jarg2_);
  public final static native int sha256_hash_vector_doSize(long jarg1, sha256_hash_vector jarg1_);
  public final static native void sha256_hash_vector_doAdd__SWIG_0(long jarg1, sha256_hash_vector jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native void sha256_hash_vector_doAdd__SWIG_1(long jarg1, sha256_hash_vector jarg1_, int jarg2, long jarg3, sha256_hash jarg3_);
  public final static native long sha256_hash_vector_doRemove(long jarg1, sha256_hash_vector jarg1_, int jarg2);
  public final static native long sha256_hash_vector_doGet(long jarg1, sha256_hash_vector jarg1_, int jarg2);
  public final static native long sha256_hash_vector_doSet(long jarg1, sha256_hash_vector jarg1_, int jarg2, long jarg3, sha256_hash jarg3_);
  public final static native void sha256_hash_vector_doRemoveRange(long jarg1, sha256_hash_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_sha256_hash_vector(long jarg1);
  public final static native long num_protocols_get();
  public final static native long new_info_hash_t__SWIG_0();
  public final static native long new_info_hash_t__SWIG_1(long jarg1, sha1_hash jarg1_);
  public final static native long new_info_hash_t__SWIG_2(long jarg1, sha256_hash jarg1_);
  public final static native long new_info_hash_t__SWIG_3(long jarg1, sha1_hash jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native boolean info_hash_t_has_v1(long jarg1, info_hash_t jarg1_);
  public final static native boolean info_hash_t_has_v2(long jarg1, info_hash_t jarg1_);
  public final static native boolean info_hash_t_has(long jarg1, info_hash_t jarg1_, int jarg2);
  public final static native long info_hash_t_get(long jarg1, info_hash_t jarg1_, int jarg2);
  public final static native long info_hash_t_get_best(long jarg1, info_hash_t jarg1_);
  public final static native boolean op_ne(long jarg1, info_hash_t jarg1_, long jarg2, info_hash_t jarg2_);
  public final static native boolean op_eq(long jarg1, info_hash_t jarg1_, long jarg2, info_hash_t jarg2_);
  public final static native boolean info_hash_t_op_lt(long jarg1, info_hash_t jarg1_, long jarg2, info_hash_t jarg2_);
  public final static native void info_hash_t_v1_set(long jarg1, info_hash_t jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long info_hash_t_v1_get(long jarg1, info_hash_t jarg1_);
  public final static native void info_hash_t_v2_set(long jarg1, info_hash_t jarg1_, long jarg2, sha256_hash jarg2_);
  public final static native long info_hash_t_v2_get(long jarg1, info_hash_t jarg1_);
  public final static native void delete_info_hash_t(long jarg1);
  public final static native long new_bitfield__SWIG_0();
  public final static native long new_bitfield__SWIG_1(int jarg1);
  public final static native long new_bitfield__SWIG_2(int jarg1, boolean jarg2);
  public final static native long new_bitfield__SWIG_3(long jarg1, bitfield jarg1_);
  public final static native boolean bitfield_op_at(long jarg1, bitfield jarg1_, int jarg2);
  public final static native boolean bitfield_get_bit(long jarg1, bitfield jarg1_, int jarg2);
  public final static native void bitfield_clear_bit(long jarg1, bitfield jarg1_, int jarg2);
  public final static native void bitfield_set_bit(long jarg1, bitfield jarg1_, int jarg2);
  public final static native boolean bitfield_all_set(long jarg1, bitfield jarg1_);
  public final static native boolean bitfield_none_set(long jarg1, bitfield jarg1_);
  public final static native int bitfield_size(long jarg1, bitfield jarg1_);
  public final static native int bitfield_num_words(long jarg1, bitfield jarg1_);
  public final static native boolean bitfield_empty(long jarg1, bitfield jarg1_);
  public final static native void bitfield_swap(long jarg1, bitfield jarg1_, long jarg2, bitfield jarg2_);
  public final static native int bitfield_count(long jarg1, bitfield jarg1_);
  public final static native int bitfield_find_first_set(long jarg1, bitfield jarg1_);
  public final static native int bitfield_find_last_clear(long jarg1, bitfield jarg1_);
  public final static native void bitfield_resize__SWIG_0(long jarg1, bitfield jarg1_, int jarg2, boolean jarg3);
  public final static native void bitfield_resize__SWIG_1(long jarg1, bitfield jarg1_, int jarg2);
  public final static native void bitfield_set_all(long jarg1, bitfield jarg1_);
  public final static native void bitfield_clear_all(long jarg1, bitfield jarg1_);
  public final static native void bitfield_clear(long jarg1, bitfield jarg1_);
  public final static native long new_bitfield__SWIG_4(long jarg1, byte_vector jarg1_);
  public final static native void bitfield_assign(long jarg1, bitfield jarg1_, long jarg2, byte_vector jarg2_);
  public final static native void delete_bitfield(long jarg1);
  public final static native long new_address__SWIG_0();
  public final static native long new_address__SWIG_1(long jarg1, address jarg1_);
  public final static native boolean address_is_v4(long jarg1, address jarg1_);
  public final static native boolean address_is_v6(long jarg1, address jarg1_);
  public final static native String address_to_string(long jarg1, address jarg1_);
  public final static native boolean address_is_loopback(long jarg1, address jarg1_);
  public final static native boolean address_is_unspecified(long jarg1, address jarg1_);
  public final static native boolean address_is_multicast(long jarg1, address jarg1_);
  public final static native boolean address_op_lt(long jarg1, address jarg1_, long jarg2, address jarg2_);
  public final static native int address_compare(long jarg1, address jarg1_, long jarg2, address jarg2_);
  public final static native long address_from_string(String jarg1, long jarg2, error_code jarg2_);
  public final static native void delete_address(long jarg1);
  public final static native long new_tcp_endpoint__SWIG_0();
  public final static native long new_tcp_endpoint__SWIG_1(long jarg1, address jarg1_, int jarg2);
  public final static native long new_tcp_endpoint__SWIG_2(long jarg1, tcp_endpoint jarg1_);
  public final static native int tcp_endpoint_port(long jarg1, tcp_endpoint jarg1_);
  public final static native long tcp_endpoint_address(long jarg1, tcp_endpoint jarg1_);
  public final static native void delete_tcp_endpoint(long jarg1);
  public final static native long new_torrent_info(String jarg1, long jarg2, error_code jarg2_);
  public final static native void delete_torrent_info(long jarg1);
  public final static native long new_add_torrent_params__SWIG_0();
  public final static native void delete_add_torrent_params(long jarg1);
  public final static native long new_add_torrent_params__SWIG_1(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_version_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_version_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_ti_set(long jarg1, add_torrent_params jarg1_, long jarg2, torrent_info jarg2_);
  public final static native long add_torrent_params_ti_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_trackers_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_vector jarg2_);
  public final static native long add_torrent_params_trackers_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_tracker_tiers_set(long jarg1, add_torrent_params jarg1_, long jarg2, int_vector jarg2_);
  public final static native long add_torrent_params_tracker_tiers_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_dht_nodes_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_int_pair_vector jarg2_);
  public final static native long add_torrent_params_dht_nodes_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_name_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_name_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_save_path_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_save_path_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_storage_mode_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_storage_mode_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_userdata_set(long jarg1, add_torrent_params jarg1_, long jarg2, client_data_t jarg2_);
  public final static native long add_torrent_params_userdata_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_trackerid_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_trackerid_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_flags_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_flags_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_info_hash_set(long jarg1, add_torrent_params jarg1_, long jarg2, info_hash_t jarg2_);
  public final static native long add_torrent_params_info_hash_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_max_uploads_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_max_uploads_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_max_connections_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_max_connections_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_upload_limit_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_upload_limit_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_download_limit_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_download_limit_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_total_uploaded_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_total_uploaded_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_total_downloaded_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_total_downloaded_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_active_time_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_active_time_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_finished_time_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_finished_time_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_seeding_time_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_seeding_time_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_added_time_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_added_time_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_completed_time_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_completed_time_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_last_seen_complete_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_last_seen_complete_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_num_complete_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_num_complete_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_num_incomplete_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_num_incomplete_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_num_downloaded_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_num_downloaded_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_http_seeds_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_vector jarg2_);
  public final static native long add_torrent_params_http_seeds_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_url_seeds_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_vector jarg2_);
  public final static native long add_torrent_params_url_seeds_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_peers_set(long jarg1, add_torrent_params jarg1_, long jarg2, tcp_endpoint_vector jarg2_);
  public final static native long add_torrent_params_peers_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_banned_peers_set(long jarg1, add_torrent_params jarg1_, long jarg2, tcp_endpoint_vector jarg2_);
  public final static native long add_torrent_params_banned_peers_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_last_download_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_last_download_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_last_upload_set(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_last_upload_get(long jarg1, add_torrent_params jarg1_);
  public final static native long add_torrent_params_get_file_priorities(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_file_priorities(long jarg1, add_torrent_params jarg1_, long jarg2, byte_vector jarg2_);
  public final static native long add_torrent_params_get_piece_priorities(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_piece_priorities(long jarg1, add_torrent_params jarg1_, long jarg2, byte_vector jarg2_);
  public final static native long add_torrent_params_get_merkle_trees(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_merkle_trees(long jarg1, add_torrent_params jarg1_, long jarg2, sha256_hash_vector_vector jarg2_);
  public final static native long add_torrent_params_get_verified_leaf_hashes(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_verified_leaf_hashes(long jarg1, add_torrent_params jarg1_, long jarg2, bool_vector_vector jarg2_);
  public final static native long add_torrent_params_get_unfinished_pieces(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_unfinished_pieces(long jarg1, add_torrent_params jarg1_, long jarg2, int_bitfield_map jarg2_);
  public final static native long add_torrent_params_get_renamed_files(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_renamed_files(long jarg1, add_torrent_params jarg1_, long jarg2, int_string_map jarg2_);
  public final static native long add_torrent_params_get_have_pieces(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_have_pieces(long jarg1, add_torrent_params jarg1_, long jarg2, bitfield jarg2_);
  public final static native long add_torrent_params_get_verified_pieces(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_set_verified_pieces(long jarg1, add_torrent_params jarg1_, long jarg2, bitfield jarg2_);
}
